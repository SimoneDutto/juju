name: "Juju JAAS Smoke Test"
on:
  pull_request:
    branches:
      - '3.6'

permissions:
  contents: read

jobs:
  smoke:
    name: JAAS Smoke Test
    runs-on: [self-hosted, linux, x64, aws, quad-xlarge]

    steps:
      - uses: actions/checkout@v4
      # There is a bug in the docker compose version 2.32.x installed in the self-hosted runner, by which health-checks are not
      # respected. So our jimm container is started before the other containers are healthy. Making the setup jaas action to fail.
      # We can remove this step once they update the self-hosted runners.
      # Link to the docker compose issue: https://github.com/docker/compose/issues/12573
      - name: Upgrade docker compose.
        run: |
          sudo apt-get update
          sudo apt-get install ca-certificates curl
          sudo install -m 0755 -d /etc/apt/keyrings
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
          sudo chmod a+r /etc/apt/keyrings/docker.asc

          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get -y install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

      - name: Install Dependencies
        shell: bash
        run: |
          set -euxo pipefail
          echo "/snap/bin" >> $GITHUB_PATH
          sudo DEBIAN_FRONTEND=noninteractive apt install -y expect

      - name: Checkout juju
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Setup env
        shell: bash
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Install local Juju
        shell: bash
        run: |
          make go-install
          
      - name: Start JIMM, bootstrap a Juju controller and add it to JIMM.
        uses: canonical/jimm/.github/actions/test-server@v3
        id: jaas
        with:
          jimm-version: v3.2.2
          ghcr-pat: ${{ secrets.GITHUB_TOKEN }}
          dump-logs: true
          use-charmed-k8s-action: "false"
      
      - name: Create a model, deploy an application and run juju status
        run: |
          juju add-model foo && \
          juju deploy haproxy && \
          sleep 5 && \
          juju status
